{"version":3,"file":"static/js/439.ad0fd711.chunk.js","mappings":"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","sources":["getAPI.js","components/BackLink/BackLink.jsx","components/MovieDetailsDescription/MovieDetailsDescription.Styled.jsx","components/MovieDetailsDescription/MovieDetailsDescription.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ea73d929c285b7e8f7948351eebc9766';\n\n//  список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\n// запит повної інформації про фільм для сторінки кінофільму\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// запит інформації про акторський склад для сторінки кінофільму\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// запит оглядів для сторінки кінофільму\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"16\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 30px 0;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Image = styled.img`\n  margin-right: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Span = styled.span`\n  margin-left: 7px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Genres = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const WrapperInformation = styled.div`\n  padding: 10px 0;\n`;\n\nexport const TitleInformation = styled.h3`\n  margin-bottom: 15px;\n`;\n\nexport const List = styled.ul`\n  width: 70px;\n`;\n\nexport const Item = styled.li`\n  font-weight: 500;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Section,\n  Wrapper,\n  Image,\n  Title,\n  Span,\n  Text,\n  Subtitle,\n  Genres,\n  WrapperInformation,\n  TitleInformation,\n  List,\n  Item,\n} from 'components/MovieDetailsDescription/MovieDetailsDescription.Styled';\n\nconst MovieDetailsDescription = ({\n  movie: { poster_path, title, release_date, vote_average, overview, genres },\n}) => {\n  return (\n    <Section>\n      <Wrapper>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://hryoutest.in.ua/uploads/images/default.jpg`\n          }\n          alt=\"{title}\"\n          width={300}\n        />\n        <div>\n          <Title>\n            {title}\n            {release_date && <Span>({release_date.split('-')[0]})</Span>}\n          </Title>\n          <Text>User Score: {Math.round(vote_average * 10)}%</Text>\n          <Subtitle>Overview</Subtitle>\n          <Text>{overview}</Text>\n          <Subtitle>Genres</Subtitle>\n          <List>\n            {genres &&\n              genres.map(({ id, name }) => <Genres key={id}>{name}</Genres>)}\n          </List>\n        </div>\n      </Wrapper>\n      <WrapperInformation>\n        <TitleInformation>Additional information</TitleInformation>\n        <List>\n          <Item>\n            <Link to={`cast`}>Cast</Link>\n          </Item>\n\n          <Item>\n            <Link to={`reviews`}>Reviews</Link>\n          </Item>\n        </List>\n      </WrapperInformation>\n    </Section>\n  );\n};\n\nexport default MovieDetailsDescription;\n\nMovieDetailsDescription.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'getAPI';\nimport BackLink from 'components/BackLink/BackLink';\nimport MovieDetailsDescription from 'components/MovieDetailsDescription/MovieDetailsDescription';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const respons = await getMovieDetails(movieId);\n        setMovie(respons);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n      <MovieDetailsDescription movie={movie} />\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrending","axios","response","data","getSearchMovies","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","StyledLink","styled","Link","to","children","size","Section","Wrapper","Image","Title","Span","Text","Subtitle","Genres","WrapperInformation","TitleInformation","List","Item","movie","poster_path","title","release_date","vote_average","overview","genres","src","alt","width","split","Math","round","map","id","name","useState","setMovie","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","respons","console","log","message","fetchData","current","Suspense","fallback"],"sourceRoot":""}